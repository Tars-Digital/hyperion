// Home *******************************
.main-title {
  color: white;
  font-size: 5rem;
  font-family: 'Noto Sans', sans-serif;
  padding: 3rem;
  text-align: center;
  display: grid;
}

h2{
  text-align: center;
  max-width: 45rem;
}

.main-text {
  color: white;
  font-size: 1.5rem;
  text-align: center;
  font-family: 'Noto Sans', sans-serif;
}

// SERVIÃ‡OS
.servicos {
  display: flex;
  justify-content: space-around;
  width: 100%;
}

.div-servicos{
  text-align: center;
  max-width: 20rem;
  min-width: 20rem;
}

.icon-servicos{
  font-size: 4rem;
  width: 4rem;
  height: 4rem;
  color: #777777;
}

.subtitle {
  text-align: center;
  color: #171717;
  font-family: 'Noto Sans', sans-serif;
  font-size: 3rem;
  padding: 2rem;
}

.title-card {
  color: white;
  font-weight: bold;
}

.text-card {
  color: white;
}

.quem-somos{
  display: grid;
  justify-content: center;
  text-align: center;
}

.body, .section-serv {
  background-color: #171717;
}

.ms-header {
  display: flex;
  align-items: center;
  justify-content: center;

  font-family: sans-serif;

  width: 100vw;
  background-color: #171717;

  &__title {
    flex: 1 1 100%;
    width: 100%;

    text-align: center;
    font-size: 2rem;
    font-weight: bold;
    color: #fff;
    text-shadow: 0px 0px 2px rgba(black, .4);
  }
}

.ms-slider {
  display: inline-block;

  height: 1.5em;
  overflow: hidden;

  vertical-align: middle;

  mask-image: linear-gradient(transparent, white, white, white, transparent);
  mask-type: luminance;
  mask-mode: alpha;

  &__words {
    display: inline-block;
    margin: 0;
    padding: 0;

    list-style: none;

    animation-name: wordSlider;
    animation-timing-function: ease-out;
    animation-iteration-count: infinite;
    animation-duration: 7s;
  }

  &__word {
    display: block;
    line-height: 1.3em;
    text-align: left;
  }
}

@keyframes wordSlider {
  $steps: -0%, -20%, -40%, -60%, -80%;

  @for $index from 0 to length($steps)-1 {
    $next: $index+1;
    $step: floor(100/(length($steps)-1));
    $animation_step: floor($step*.2);

    #{$step*$index}%,
    #{($step*$next) - $animation_step}% {
      transform: translateY(nth($steps, $index+1));
    }
  }
  100% {
    transform: translateY(nth($steps, length($steps)));
  }
}